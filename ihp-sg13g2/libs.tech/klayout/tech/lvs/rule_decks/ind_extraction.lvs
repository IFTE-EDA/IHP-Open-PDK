# frozen_string_literal: true

#==========================================================================
# Copyright 2024 IHP PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# SPDX-License-Identifier: Apache-2.0
#==========================================================================

#================================
# ----- Inductor EXTRACTION -----
#================================

logger.info('Starting Inductor EXTRACTION')

# ind2
logger.info('Extracting Inductor2 device')
extract_devices(GeneralNTerminalExtractor.new('inductor2', 2), {
                  'core' => ind2_core,
                  'ports' => ind2_ports,
                  'meas_mk' => topmetal2.and(ind2_core),
                  'dev_mk' => ind2_mk,
                  'sub_mk' => ind2_sub,
                  'tm2_mk' => ind2_TM2,
                  'tm1_mk' => ind2_TM1
                })

# ind3
logger.info('Extracting Inductor3 device')
extract_devices(GeneralNTerminalExtractor.new('inductor3', 3), {
                  'core' => ind3_core,
                  'ports' => ind3_ports,
                  'meas_mk' => topmetal2.and(ind3_core),
                  'dev_mk' => ind3_mk,
                  'sub_mk' => ind3_sub,
                  'tm2_mk' => ind3_TM2,
                  'tm1_mk' => ind2_TM1
                })
                
# cind 
logger.info('Extracting Custom_Inductor device')
extract_devices(GeneralNTerminalExtractor.new('cinductor', 2), {
                  'core' => cind_core,
                  'ports' => cind_ports,
                  'meas_mk' => topmetal2.and(cind_core),
                  'dev_mk' => cind_mk,
                  'sub_mk' => cind_sub,
                  'tm2_mk' => cind_TM2,
                  'tm1_mk' => cind_TM1,
                  'm1_mk' => cind_M1,
                  'm2_mk' => cind_M2,
                  'm3_mk' => cind_M3,
                  'm4_mk' => cind_M4,
                  'm5_mk' => cind_M5,
                  'topvia2' => cind_topvia2,
                  'topvia1' => cind_topvia1,
                  'via1' => cind_via1,
                  'via2' => cind_via2,
                  'via3' => cind_via3,
                  'via4' => cind_via4
                  
                })
